---
title: "maps-ggplot"
format: revealjs
---

```{r setup}
library(tidyverse)
library(mdsr)
library(sf)
library(ggspatial)
library(leaflet)
CholeraDeaths_Book <-mdsr::CholeraDeaths
st_crs(CholeraDeaths_Book) = st_crs(CholeraDeaths_Book) 
```

```{r}
dsn <- fs::path("~","Documents","MTH_190_Intro_to_DS","course-materials", "SnowGIS_SHP")
list.files(dsn)
```

```{r}
st_layers(dsn
          )
```

```{r}
CholeraDeaths <- st_read(dsn, layer = "Cholera_Deaths")
```

```{r}
class(CholeraDeaths)
```

```{r}
CholeraDeaths
```

```{r}
CholeraDeaths_Book<- mdsr::CholeraDeaths
```

```{r}

ggplot((CholeraDeaths_Book)) +
  geom_sf(  )
```

```{r}
ggplot(CholeraDeaths) + 
  annotation_map_tile(type = "osm", zoomin = 0) + 
  geom_sf(aes(size = Count), alpha = 0.7)
```

```{r}
library(mapproj)
library(maps)
map("world", projection = "mercator", wrap = TRUE)
map("world", projection = "cylequalarea", param = 45, wrap = TRUE)
```

```{r}
map(
  "state", projection = "lambert", 
  parameters = c(lat0 = 20, lat1 = 50), wrap = TRUE
)
map(
  "state", projection = "albers", 
  parameters = c(lat0 = 20, lat1 = 50), wrap = TRUE
)
```

```{r}
st_crs(CholeraDeaths )
```

There are many CRSs, but a few are most common. A set of EPSG ([*European Petroleum Survey Group*](https://en.wikipedia.org/w/index.php?search=European%20Petroleum%20Survey%20Group)) codes provides a shorthand for the full descriptions (like the one shown above). The most commonly-used are:

[EPSG:4326](https://epsg.io/4326) - Also known as [WGS84](https://en.wikipedia.org/wiki/World_Geodetic_System#WGS84), this is the standard for GPS systems and Google Earth.

[EPSG:3857](https://epsg.io/3857) - A Mercator projection used in maps tiles^[33](https://mdsr-book.github.io/mdsr2e/ch-spatial.html#fn33)^ by Google Maps, Open Street Maps, etc.

[EPSG:27700](https://epsg.io/27700) - Also known as OSGB 1936, or the British National Grid: United Kingdom Ordnance Survey. It is commonly used in Britain.

```{r}
cholera_4326 <- CholeraDeaths_Book %>% 
  st_transform(4326)
```

```{r}
st_bbox(cholera_4326
        )
st_bbox(CholeraDeaths_Book)
```

```{r}
ggplot(cholera_4326) + 
  annotation_map_tile(type = "osm", zoomin = 0) + 
  geom_sf(aes(size = Count), alpha = 0.7)
```

```{r}
cholera_latlong <- CholeraDeaths %>%
  st_set_crs(27700) %>%
  st_transform(4326)
snow <- ggplot(cholera_latlong) + 
  annotation_map_tile(type = "osm", zoomin = 0) + 
  geom_sf(aes(size = Count))

pumps <- st_read(dsn,layer = "Pumps")

pumps_latlong <- pumps %>% 
  st_set_crs(27700) %>%
  st_transform(4326)
snow +
  geom_sf(data = pumps_latlong, size = 3, color = "red")
```

Exercise 1

```{r}
library(tidygeocoder)
My_address<- tibble(address=c("20 Mayher St, Easthampton, MA","Holyoke Community College, Holyoke,MA")) |>
geocode(address, method="osm") |>
  mutate(name = c("Home","Work"))
My_address
```

```{r}
ggplot(My_address) +
  geom_point(aes(long,lat)) +
  coord_quickmap()
  

```

```{r}
ma_counties <- map_data("county", "massachusetts") %>% 
  select( long, lat, group, id = subregion)
tail(ma_counties)
#>     lon  lat group     id
#> 1 -83.9 44.9     1 alcona
#> 2 -83.4 44.9     1 alcona
#> 3 -83.4 44.9     1 alcona
#> 4 -83.3 44.8     1 alcona
#> 5 -83.3 44.8     1 alcona
#> 6 -83.3 44.8     1 alcona
```

```{r}
ma_counties |> ggplot(aes(long,lat,group=group))+
  geom_polygon(fill = "white", colour = "grey50")+
  geom_point()+
  coord_quickmap()
```

```{r}
ma_cities <- us.cities %>% 
  filter(country.etc =="MA") |>
  select(name, long, lat)
tail(ma_cities)
```

```{r}
ma_counties |> ggplot(aes(long,lat))+
  geom_polygon(fill = "white", colour = "grey50",aes(group=group)) +
  geom_point(data = My_address, colour="orange", size=4) +
  geom_point(data = ma_cities,color= "purple") +
  coord_quickmap()
```

```{r}
class(ma_counties)
class(ma_cities)
```

```{r}
states <- read_sf("~/Documents/MTH_190_Intro_to_DS/course-materials/cb_2021_us_state_500k") |>
  sf::st_transform('+proj=longlat +datum=WGS84')

counties <- read_sf("~/Documents/MTH_190_Intro_to_DS/course-materials/cb_2021_us_county_5m") |>
  st_transform('+proj=longlat +datum=WGS84')
```

[Go here](https://www.census.gov/geographies/mapping-files/time-series/geo/cartographic-boundary.html) and download some shape files.

```{r}

leaflet(states) |>
  addTiles() |>
  addPolygons()
```

```{r}
Just_MA <-states |> 
  filter(STUSPS =="MA") 
  
leaflet(Just_MA) |>
  addTiles() |>
  addPolygons()
```

```{r}
Just_MA_counties <- counties |> filter(STUSPS == "MA")

leaflet() |>
  addTiles() |>
  addPolygons(data = Just_MA_counties) |>
  addMarkers(data = My_address, lng=~long, lat=~lat, popup = ~name)
  
```

```{r}
Just_MA_counties <- counties |> filter(STUSPS == "MA")

leaflet() |>
  addTiles() |>
  addPolygons(data = Just_MA_counties) |>
  addMarkers(data = My_address, lng=~long, lat=~lat, popup = ~name) |>
  addCircleMarkers(data = ma_cities, lng=~long, lat=~lat, popup = ~name, color='black')
  
```
